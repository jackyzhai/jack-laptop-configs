# By default up/down are bound to previous-history
# and next-history respectively. The following does the
# same but gives the extra functionality where if you
# type any text (or more accurately, if there is any text
# between the start of the line and the cursor),
# the subset of the history starting with that text
# is searched (like 4dos for e.g.).
# Note to get rid of a line just Ctrl-C
"\e[B": history-search-forward
"\e[A": history-search-backward

$if Bash
  # F10 toggles mc on and off
  # Note Ctrl-o toggles panes on and off in mc
  "\e[21~": "mc\C-M"

  #do history expansion when space entered
  Space: magic-space
$endif

# Include system wide settings which are ignored
# by default if one has their own .inputrc
$include /etc/inputrc


#read
#Run the read shell built-in and input the key #combination. Sometimes, read will not echo the escape #sequence, but do the asked action, like deleting a #character (when backspace is pressed). In this case, #use the method below.
#Verbatim mode
#Press CTRL-V to enter the verbatim mode first. After #that, the next sequence you enter will not be parsed #and executed by the shell, but instead the escape #sequence be printed.

#Map Iterm to reading key-binding
# http://www.unix-manuals.com/refs/misc/ascii-table.html
# ⌘←: Send Hex Codes: 0x01
# ⌘→: Send Hex Codes: 0x05
# ⌘ backspace: 0x15 CTRL-U
# ⌘ del: 0x0B CTRL-K
# opt backspace: 0x17 ctrl-w 
# opt del: escape + d  delete to the end of the word
# OPT + left -> escape + b 
# OPT + right -> escape + f